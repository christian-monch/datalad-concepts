id: https://concepts.datalad.org/schemas/datalad-dataset-components
name: datalad-dataset-components
version: UNRELEASED
status: bibo:status/draft
title: Schema for any DataLad dataset component
description: |
  This specification defines a schema for describing a DataLad dataset
  via a flat list of linked metadata objects. Each metadata object
  has a simple structure with minimal property nesting.

  Each object is of type `ComponentSE`, a class that has two required slots:
  `meta_id` and `meta_type`. The former must be a unique object identifier,
  and the latter must identify a subclass of `ComponentSE` that the object
  represents. Both value must be given as a CURIE.

  Nesting of objects is avoided, unless a DataLad dataset contains insufficient
  information to guarantee the availability of a unique identifier for a given
  entity.

  Subclasses of `ComponentSE` represent all recognized dataset components.
  These classes, within this schema, only define the nature of the employed
  identifier, and the linkage to other dataset components. All other
  properties are defined by a corresponding ontology class that is applied
  as a "mixin".

  An additional `ContainerSE` class is provided. It has a single slot
  `components`, and can be used to represent a list of components for formats
  and use cases that require a root class/instance.

comments:
  - ALL CONTENT HERE IS UNRELEASED AND MAY CHANGE ANY TIME

license: MIT

prefixes:
  annex: https://concepts.datalad.org/namespace/annex-uuid/
  bibo: http://purl.org/ontology/bibo/
  datalad: https://concepts.datalad.org/namespace/dataset-uuid/
  DCAT: http://www.w3.org/ns/dcat#
  dcterms: http://purl.org/dc/terms/
  dlco: https://concepts.datalad.org/ontology/
  dlccs: https://concepts.datalad.org/schemas/datalad-dataset-components/
  gitsha: https://concepts.datalad.org/namespace/gitsha/
  linkml: https://w3id.org/linkml/
  prov: http://www.w3.org/ns/prov#
  spdx: http://spdx.org/rdf/terms#

imports:
  - ../ontology/schema_utils
  - ../ontology/datalad
  - ../ontology/git-annex

classes:
  ContainerSE:
    class_uri: dlccs:ContainerSE
    description: >-
      A container for dataset component objects.
    tree_root: true
    attributes:
      components:
        description: >-
          Component list.
        multivalued: true
        inlined_as_list: true
        range: ComponentSE

  ComponentSE:
    class_uri: dlccs:ComponentSE
    mixins:
      - HasRequiredMetaTypeDesignator
    description: >-
      Base class for any recognized dataset component type. This class
      should never be used directly, only its subclasses.
    slots:
      - meta_id

  GitTrackedSE:
    is_a: ComponentSE
    description: >-
      Representation for any resource tracked by Git, thereby having a unique
      `gitsha`-based identifier.
    comments:
      - This is the base class of any entity that is directly tracked by Git.
    slot_usage:
      meta_id:
        description: >-
          SHA1 based identifier in the form of a CURIE with an explicit
          `gitsha:` namespace prefix.
        equals_expression: "gitsha:{gitsha}"
        pattern: "^gitsha:[0-9a-f]{40}$"

  QualifiedGitTrackedPartSE:
    class_uri: dlccs:QualifiedGitTrackedPartSE
    mixins:
      - QualifiedPart
    description: >-
      Schema element for a `QualifiedPart`. Every part is represented by
      a `GitTrackedSE`.
    slot_usage:
      relation:
        range: GitTrackedSE

  AnnexDistributionSE:
    class_uri: dlccs:AnnexDistributionSE
    mixins:
      - AnnexDistribution
    description: >-
      Schema element for a `AnnexDistribution`.
    slot_usage:
      qualified_access:
        inlined: true
        inlined_as_list: true
        multivalued: true
        range: QualifiedAnnexAccessSE

  QualifiedAnnexAccessSE:
    class_uri: dlccs:QualifiedAnnexAccessSE
    mixins:
      - QualifiedAnnexAccess
    description: >-
      Schema element for a `QualifiedAnnexAccess`.
    slot_usage:
      relation:
        range: AnnexRemoteSE

  AnnexRemoteSE:
    class_uri: dlccs:AnnexRemoteSE
    is_a: ComponentSE
    mixins:
      - AnnexRemote
    description: >-
      Schema element for a `AnnexRemote`.
    slots:
      - meta_id
    slot_usage:
      meta_id:
        equals_expression: "annex:{uuid}"

  DataladDatasetVersionSE:
    class_uri: dlccs:DataladDatasetVersionSE
    is_a: GitTrackedSE
    mixins:
      - DataladDatasetVersion
    description: >-
      TODO
    todos:
      - Add the `Commit` interface via a mixin
    slot_usage:
      has_annex_remote:
        multivalued: true
        inlined: false
        range: AnnexRemoteSE
        todos:
          - see TODO in DataladDatasetVersion re this slot
      has_part:
        inlined: false
        multivalued: true
        range: GitTrackedSE
      is_version_of:
        inlined: false
        range: DataladDatasetSE
      meta_id:
        equals_expression: "gitsha:{gitsha}"
      qualified_part:
        inlined: true
        inlined_as_list: true
        multivalued: true
        range: QualifiedGitTrackedPartSE

  DataladDatasetSE:
    class_uri: dlccs:DataladDatasetSE
    is_a: ComponentSE
    description: >-
      Schema element for a `DataladDataset`.
    see_also: 
      - dlco:DataladDataset
    comments:
      - The required identifier format is `datalad:<dataset-uuid>`.
    mixins:
      - DataladDataset
    slot_usage:
      meta_id:
        equals_expression: "datalad:{uuid}"

  GitBlobSE:
    class_uri: dlccs:GitBlobSE
    is_a: GitTrackedSE
    mixins:
      - FileInGit
    description: >-
      Schema element for a `FileInGit`.

  AnnexedFileSE:
    class_uri: dlccs:AnnexedFileSE
    is_a: GitTrackedSE
    mixins:
      - AnnexedFile
    description: >-
      Schema element for a `AnnexedFile`.
    slot_usage:
      distribution:
        inlined: true
        multivalued: false
        range: AnnexDistributionSE
        notes:
          - This is not multivalued, because the distribution of an annexed
            file is an annex key, a bit identical blob. The only thing that
            we can have multiple of are remote locations, where this key is
            available. Even when have a URL key and the actual content may
            be unknown (yet), the system is not made to switch between
            distributions without filename changes.
