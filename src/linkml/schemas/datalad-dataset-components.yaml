id: https://concepts.datalad.org/schemas/datalad-dataset-components
name: datalad-dataset-components
version: UNRELEASED
status: bibo:status/draft
title: Schema for any DataLad dataset component
description: |
  This specification defines a schema for describing a DataLad dataset
  via a flat list of linked metadata objects. Each metadata object
  has a simple structure with minimal property nesting.

  Each object is of type `Object`, a class that has two required slots:
  `meta_id|code` and `meta_type`. The former must be a unique object identifier,
  and the latter must identify a subclass of `Object` that the object
  represents. Both value must be given as a CURIE.

  Nesting of objects is avoided, unless a DataLad dataset contains insufficient
  information to guarantee the availability of a unique identifier for a given
  entity.

  Subclasses of `Object` represent all recognized dataset components.
  These classes, within this schema, only define the nature of the employed
  identifier, and the linkage to other dataset components. All other
  properties are defined by a corresponding ontology class that is applied
  as a "mixin".

  An additional `Objects` class is provided. It has a single slot
  `objects`, and can be used to represent a list of metadata objects for
  formats and use cases that require a root class/instance.

comments:
  - ALL CONTENT HERE IS UNRELEASED AND MAY CHANGE ANY TIME

license: MIT

prefixes:
  annex: https://concepts.datalad.org/ns/annex-uuid/
  annexkey: https://concepts.datalad.org/ns/annex-key/
  bibo: http://purl.org/ontology/bibo/
  datalad: https://concepts.datalad.org/ns/dataset-uuid/
  DCAT: http://www.w3.org/ns/dcat#
  dcterms: http://purl.org/dc/terms/
  dlco: https://concepts.datalad.org/ontology/
  dlccs: https://concepts.datalad.org/schemas/datalad-dataset-components/
  gitsha: https://concepts.datalad.org/ns/gitsha/
  linkml: https://w3id.org/linkml/
  prov: http://www.w3.org/ns/prov#
  spdx: http://spdx.org/rdf/terms#

imports:
  - ../ontology/schema_utils
  - ../ontology/datalad
  - ../ontology/git-annex

classes:
  Objects:
    class_uri: dlccs:Object
    is_a: MetadataObject
    description: >-
      A container for dataset component objects.
    tree_root: true
    attributes:
      objects:
        description: >-
          Component list.
        multivalued: true
        inlined_as_list: true
        range: Object

  Object:
    class_uri: dlccs:Object
    is_a: MetadataObject
    mixins:
      - HasRequiredMetaTypeDesignator
    description: >-
      Base class for any recognized dataset component object type. This class
      should never be used directly, only its subclasses.

  GUIDedObject:
    class_uri: dlccs:GUIDedObject
    is_a: Object
    description: >-
      Metadata object that is globally uniquely identified
      with a URI or CURIE.
    slots:
      - meta_id

  DUIDedObject:
    class_uri: dlccs:DUIDedObject
    is_a: Object
    description: >-
      Metadata object that is uniquely identified within a
      metadata document by some code.
    slots:
      - meta_code

  GitTrackedObject:
    is_a: GUIDedObject
    description: >-
      Representation for any resource tracked by Git, thereby having a unique
      `gitsha`-based identifier.
    comments:
      - This is the base class of any entity that is directly tracked by Git.
    slot_usage:
      meta_id:
        description: >-
          SHA1 based identifier in the form of a CURIE with an explicit
          `gitsha:` namespace prefix.
        equals_expression: '"gitsha:" + {gitsha}'
        pattern: "^gitsha:[0-9a-f]{40}$"

  QualifiedGitTrackedPartObject:
    class_uri: dlccs:QualifiedGitTrackedPartObject
    is_a: MetadataObject
    mixins:
      - QualifiedPart
    description: >-
      Metadata object for a `QualifiedPart`. Every part is represented by
      a `GitTrackedObject`.
    slot_usage:
      relation:
        range: GitTrackedObject

  QualifiedAnnexAccessObject:
    class_uri: dlccs:QualifiedAnnexAccessObject
    is_a: MetadataObject
    mixins:
      - QualifiedAnnexAccess
    description: >-
      Metadata object for a `QualifiedAnnexAccess`.
    slot_usage:
      relation:
        range: AnnexRemoteObject

  AnnexRemoteObject:
    class_uri: dlccs:AnnexRemoteObject
    is_a: GUIDedObject
    mixins:
      - AnnexRemote
    description: >-
      Metadata object for a `AnnexRemote`.
    slots:
      - meta_id
    slot_usage:
      meta_id:
        equals_expression: '"annex:" + {uuid}'

  DataladDatasetVersionObject:
    class_uri: dlccs:DataladDatasetVersionObject
    is_a: GitTrackedObject
    mixins:
      - DataladDatasetVersion
    description: >-
      TODO
    slot_usage:
      distribution:
        inlined: false
        multivalued: false
        range: GitTreeObject
      has_annex_remote:
        multivalued: true
        inlined: false
        range: AnnexRemoteObject
        todos:
          - see TODO in DataladDatasetVersion re this slot
      has_part:
        inlined: false
        multivalued: true
        range: GitTrackedObject
      is_version_of:
        inlined: false
        range: DataladDatasetObject
      qualified_part:
        inlined: true
        inlined_as_list: true
        multivalued: true
        range: QualifiedGitTrackedPartObject
      tree:
        inlined: false
        multivalued: false
        range: GitTreeObject
      was_derived_from:
        inlined: false
        multivalued: true
        range: DataladDatasetVersionObject
      was_generated_by:
        inlined: true
        range: CommittingObject

  GitTreeObject:
    class_uri: dlccs:GitTreeObject
    is_a: GitTrackedObject
    mixins:
      - GitTree
    description: >-
      Metadata object for a `GitTree`.
    slot_usage:
      qualified_part:
        inlined: true
        inlined_as_list: true
        multivalued: true
        range: FilesystemDirectoryItemObject

  FilesystemDirectoryItemObject:
    class_uri: dlccs:FilesystemDirectoryItemObject
    is_a: MetadataObject
    mixins:
      - FilesystemDirectoryItem
    description: >-
      Metadata object for a `FilesystemDirectoryItem`.
    slots:
      - relation
    slot_usage:
      relation:
        # union range specification does not seem to work
        #any_of:
        #  - range: GitTrackedObject
        #  - range: StableAnnexKeyObject
        range: GUIDedObject
    todos:
      - figure out why a union range specification is not working

  CommittingObject:
    class_uri: dlccs:CommittingObject
    is_a: MetadataObject
    mixins:
      - Committing
    description: >-
      Metadata object for a `Committing`.
    slot_usage:
      was_associated_with:
        inlined: False
        range: GitUserAgentObject
      was_informed_by:
        range: CommitAuthoringObject

  CommitAuthoringObject:
    class_uri: dlccs:CommitAuthoringObject
    is_a: MetadataObject
    mixins:
      - CommitAuthoring
    description: >-
      Metadata object for a `CommitAuthoring`.
    slot_usage:
      was_associated_with:
        inlined: False
        range: GitUserAgentObject

  GitUserAgentObject:
    class_uri: dlccs:GitUserAgentObject
    is_a: DUIDedObject
    mixins:
      - GitUserAgent
    slots:
      - meta_code
    description: >-
      Metadata object for a `GitUserAgent`.

  DataladDatasetObject:
    class_uri: dlccs:DataladDatasetObject
    is_a: GUIDedObject
    description: >-
      Metadata object for a `DataladDataset`.
    see_also: 
      - dlco:DataladDataset
    comments:
      - The required identifier format is `datalad:<dataset-uuid>`.
    mixins:
      - DataladDataset
    slot_usage:
      meta_id:
        equals_expression: '"datalad:" + {uuid}'

  GitBlobObject:
    class_uri: dlccs:GitBlobObject
    is_a: GitTrackedObject
    mixins:
      - GitBlob
    description: >-
      Metadata object for a `FileInGit`.

  StableAnnexKeyObject:
    class_uri: dlccs:StableAnnexKeyObject
    is_a: GUIDedObject
    mixins:
      - StableAnnexKey
    description: >-
      Metadata object for a `StableAnnexKey`.
    slots:
      - meta_id
    slot_usage:
      qualified_access:
        inlined: true
        inlined_as_list: true
        multivalued: true
        range: QualifiedAnnexAccessObject
